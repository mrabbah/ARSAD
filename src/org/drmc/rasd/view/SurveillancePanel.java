/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.drmc.rasd.view;

import it.sauronsoftware.ftp4j.FTPDataTransferListener;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JTextArea;
import org.drmc.rasd.dao.IMessageRecuDao;
import org.drmc.rasd.modele.MessageRecu;
import org.drmc.rasd.service.fichiers.ConsommateurFichiers;

/**
 *
 * @author RABBAH
 */
public class SurveillancePanel extends javax.swing.JPanel implements FTPDataTransferListener {

    private final MainFrame parent;

    /**
     * Creates new form SurveillancePanel
     *
     * @param parent
     */
    public SurveillancePanel(MainFrame parent, String message, ConsommateurFichiers cf) {

        this.parent = parent;
        this.parent.setTitle("Surveillance système");
        initComponents();
        this.messageTransmis.setText(message);
        parent.getMenuPrincipal().setVisible(true);
        parent.getToolBarPrincipale().setVisible(true);
        parent.setDefaultLookAndFeelDecorated(true);

        //Affichage du dernier message recu
        System.out.println("zezezeze");
        IMessageRecuDao messageRecuDao = parent.getMessageRecuDao();
        MessageRecu lastMessageRecu = messageRecuDao.getLastMessageRecu();
        affichageDernierMessageRecu(lastMessageRecu);
        System.out.println("mmmmmmmmm");
        //Verification s il y alerte
        verifierAlerte(lastMessageRecu);
        cf.setSurveillancePanel(this);
    }

    private void affichageDernierMessageRecu(MessageRecu lastMessageRecu) {
        
        this.notificationReception.setIcon(null);
        
        this.notificationReception.setIcon(new ImageIcon(getClass().getResource("/org/drmc/rasd/images/cercle_vert.png")));
            this.validate();
            
        this.messageRecu.setText(lastMessageRecu.getCorps());
    }

    private void verifierAlerte(MessageRecu lastMessageRecu) {
        String entete = lastMessageRecu.getEntete()+"";
        String corps = lastMessageRecu.getCorps();
        System.out.println("alert    "+entete);
        if (entete.startsWith("SPMC")) {
            
            this.notificationAlertes.setIcon(null);
            this.notificationAlertes.setIcon(new ImageIcon(getClass().getResource("/org/drmc/rasd/images/cercle_rouge.png")));
            this.validate();
            this.messageAlerte.setText(corps);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelReception = new javax.swing.JPanel();
        notificationReception = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        messageRecu = new javax.swing.JTextArea();
        heureReception = new javax.swing.JLabel();
        panelTransmission = new javax.swing.JPanel();
        notificationTransmission = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        messageTransmis = new javax.swing.JTextArea();
        heureTransmission = new javax.swing.JLabel();
        panelAlertes = new javax.swing.JPanel();
        notificationAlertes = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        messageAlerte = new javax.swing.JTextArea();
        dateAlerte = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(800, 600));
        setLayout(new java.awt.BorderLayout());

        panelReception.setBorder(javax.swing.BorderFactory.createTitledBorder("Réception"));

        notificationReception.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notificationReception.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/drmc/rasd/images/cercle_jaune.png"))); // NOI18N

        messageRecu.setColumns(20);
        messageRecu.setRows(5);
        jScrollPane4.setViewportView(messageRecu);

        javax.swing.GroupLayout panelReceptionLayout = new javax.swing.GroupLayout(panelReception);
        panelReception.setLayout(panelReceptionLayout);
        panelReceptionLayout.setHorizontalGroup(
            panelReceptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReceptionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelReceptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(heureReception, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(notificationReception))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelReceptionLayout.setVerticalGroup(
            panelReceptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReceptionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelReceptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelReceptionLayout.createSequentialGroup()
                        .addComponent(notificationReception)
                        .addGap(18, 18, 18)
                        .addComponent(heureReception))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(panelReception, java.awt.BorderLayout.CENTER);

        panelTransmission.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Transmission", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 0)));

        notificationTransmission.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notificationTransmission.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/drmc/rasd/images/cercle_jaune.png"))); // NOI18N

        messageTransmis.setColumns(20);
        messageTransmis.setRows(5);
        jScrollPane5.setViewportView(messageTransmis);

        javax.swing.GroupLayout panelTransmissionLayout = new javax.swing.GroupLayout(panelTransmission);
        panelTransmission.setLayout(panelTransmissionLayout);
        panelTransmissionLayout.setHorizontalGroup(
            panelTransmissionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTransmissionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTransmissionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(notificationTransmission)
                    .addComponent(heureTransmission, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelTransmissionLayout.setVerticalGroup(
            panelTransmissionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTransmissionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTransmissionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelTransmissionLayout.createSequentialGroup()
                        .addComponent(notificationTransmission)
                        .addGap(18, 18, 18)
                        .addComponent(heureTransmission)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(panelTransmission, java.awt.BorderLayout.PAGE_START);

        panelAlertes.setBorder(javax.swing.BorderFactory.createTitledBorder("Alertes"));

        notificationAlertes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notificationAlertes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/drmc/rasd/images/cercle_jaune.png"))); // NOI18N

        messageAlerte.setColumns(20);
        messageAlerte.setRows(5);
        jScrollPane6.setViewportView(messageAlerte);

        javax.swing.GroupLayout panelAlertesLayout = new javax.swing.GroupLayout(panelAlertes);
        panelAlertes.setLayout(panelAlertesLayout);
        panelAlertesLayout.setHorizontalGroup(
            panelAlertesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAlertesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAlertesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(notificationAlertes)
                    .addComponent(dateAlerte, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelAlertesLayout.setVerticalGroup(
            panelAlertesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAlertesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAlertesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelAlertesLayout.createSequentialGroup()
                        .addComponent(notificationAlertes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dateAlerte)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(panelAlertes, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dateAlerte;
    private javax.swing.JLabel heureReception;
    private javax.swing.JLabel heureTransmission;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea messageAlerte;
    private javax.swing.JTextArea messageRecu;
    private javax.swing.JTextArea messageTransmis;
    private javax.swing.JLabel notificationAlertes;
    private javax.swing.JLabel notificationReception;
    private javax.swing.JLabel notificationTransmission;
    private javax.swing.JPanel panelAlertes;
    private javax.swing.JPanel panelReception;
    private javax.swing.JPanel panelTransmission;
    // End of variables declaration//GEN-END:variables

    @Override
    public void started() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        System.out.println("Debut d envoi");
    }

    @Override
    public void transferred(int i) {
        System.out.println("Transfert temine");
        this.notificationTransmission.setIcon(null);
        this.notificationTransmission.setIcon(new ImageIcon(getClass().getResource("/org/drmc/rasd/images/cercle_vert.png")));
        this.validate();
    }

    @Override
    public void completed() {
        System.out.println("completed");
        this.notificationTransmission.setIcon(null);
        this.notificationTransmission.setIcon(new ImageIcon(getClass().getResource("/org/drmc/rasd/images/cercle_vert.png")));
        //this.notificationTransmission.setIcon((Icon) Toolkit.getDefaultToolkit().getImage(getClass().getResource("/org/drmc/rasd/images/cercle_vert.png")));
        this.validate();
        try {
            Thread.sleep(10000);
            //this.notificationTransmission.setIcon((Icon) Toolkit.getDefaultToolkit().getImage(getClass().getResource("/org/drmc/rasd/images/cercle_jaune.png")));
            this.notificationTransmission.setIcon(null);
            this.notificationTransmission.setIcon(new ImageIcon(getClass().getResource("/org/drmc/rasd/images/cercle_jaune.png")));
            this.validate();
        } catch (InterruptedException ex) {
            Logger.getLogger(SurveillancePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void aborted() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        System.out.println("Aborted");
    }

    @Override
    public void failed() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        System.out.println("failed");
    }

    public JTextArea getMessageAlerte() {
        return messageAlerte;
    }

    public JTextArea getMessageRecu() {
        return messageRecu;
    }

    public JTextArea getMessageTransmis() {
        return messageTransmis;
    }
    
    
}
