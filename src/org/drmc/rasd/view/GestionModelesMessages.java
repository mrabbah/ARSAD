/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.drmc.rasd.view;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.drmc.rasd.controller.ModelModelMessage;
import org.drmc.rasd.dao.DbConnection;
import org.drmc.rasd.dao.IDbConnection;
import org.drmc.rasd.dao.IModelMessageDao;
import org.drmc.rasd.dao.ModelMessageDao;
import org.drmc.rasd.modele.ModelMessage;
import org.drmc.rasd.modele.ParametresApplication;
import org.drmc.rasd.service.ChargeurParametresApplication;
import org.drmc.rasd.service.IChargeurParametresApplication;
import org.drmc.rasd.service.mockup.ChargeurParametresApplicationMockup;

/**
 *
 * @author DRMC
 */
public class GestionModelesMessages extends javax.swing.JPanel {
    
    private final MainFrame parent;

    /**
     * Creates new form GestionModelesMessages
     */
    public GestionModelesMessages(MainFrame parent) {
        this.parent = parent;
        this.parent.setTitle("Création des comptes");
        initComponents();
        parent.getMenuPrincipal().setVisible(true);
        parent.getToolBarPrincipale().setVisible(true);
        myinit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelNomModele = new javax.swing.JLabel();
        jLabelEntete = new javax.swing.JLabel();
        jTextFieldNomModele = new javax.swing.JTextField();
        jTextFieldEntete = new javax.swing.JTextField();
        jButtonAjouter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonSupprimer = new javax.swing.JButton();
        jLabelMessageErreur = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jLabelNomModele.setText("Le nom du modele :");

        jLabelEntete.setText("Entête :");

        jTextFieldNomModele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomModeleActionPerformed(evt);
            }
        });

        jButtonAjouter.setText("Ajouter");
        jButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldNomModele)
                    .addComponent(jLabelEntete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelNomModele, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                    .addComponent(jTextFieldEntete)
                    .addComponent(jButtonAjouter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jButtonSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addGap(18, 18, 18))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelMessageErreur, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelNomModele, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldNomModele, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelEntete, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldEntete, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAjouter)
                    .addComponent(jButtonSupprimer))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelMessageErreur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNomModeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomModeleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomModeleActionPerformed

    private void jButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterActionPerformed
        try {
            IChargeurParametresApplication ca = new ChargeurParametresApplication();
            final ParametresApplication pa = ca.chargerParametres();
            //final IGestionMessage gestionMessage = new GestionMessage();
            
            IDbConnection dbConnection = DbConnection.getInstance(pa);
            String nomModele = jTextFieldNomModele.getText();
            String entete = jTextFieldEntete.getText();
            ModelMessage mm = new ModelMessage(null, entete, nomModele);
            IModelMessageDao immd = new ModelMessageDao(dbConnection);
            if(!nomModele.equals("")||!entete.equals("")){
            if (immd.ajouter(mm)) {
                jLabelMessageErreur.setText("la création du nouveau model est bien faite");
                jTextFieldNomModele.setText("");
                jTextFieldEntete.setText("");
            }else{
                jLabelMessageErreur.setText("la création du nouveau model est bien faite");
                jTextFieldNomModele.setText("");
                jTextFieldEntete.setText("");
            }
            }else{
                jLabelMessageErreur.setText("Entete ou le nom module esrt incorrecte");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GestionModelesMessages.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GestionModelesMessages.class.getName()).log(Level.SEVERE, null, ex);
        }
        myinit();
        

    }//GEN-LAST:event_jButtonAjouterActionPerformed

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        try {
            int i = -1;
            i = jTable1.getSelectedRow();
            
            
            
            IChargeurParametresApplication ca = new ChargeurParametresApplication();
            final ParametresApplication pa = ca.chargerParametres();
            //final IGestionMessage gestionMessage = new GestionMessage();
      
            IDbConnection dbConnection = DbConnection.getInstance(pa);
        
            if (i != -1) {
                String s = (String) jTable1.getValueAt(i, 0);
                
                ModelMessage mm = new ModelMessage(null,s, null);
                IModelMessageDao immd = new ModelMessageDao(dbConnection);
                System.out.println("suppppppp");
                immd.supprimer(mm);
                this.myinit();
            } else {
                jLabel1.setText("tu dois selectionner un model");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GestionModelesMessages.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GestionModelesMessages.class.getName()).log(Level.SEVERE, null, ex);
        }
                      
            
                    
    }//GEN-LAST:event_jButtonSupprimerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAjouter;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelEntete;
    private javax.swing.JLabel jLabelMessageErreur;
    private javax.swing.JLabel jLabelNomModele;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldEntete;
    private javax.swing.JTextField jTextFieldNomModele;
    // End of variables declaration//GEN-END:variables
private void myinit() {
        try {
            IChargeurParametresApplication ca = new ChargeurParametresApplication();
            final ParametresApplication pa = ca.chargerParametres();
            IDbConnection dbConnection = DbConnection.getInstance(pa);
            IModelMessageDao immd = new ModelMessageDao(dbConnection);
            ModelModelMessage mmm = new ModelModelMessage(immd.listeModelsMessages());
            this.jTable1.setModel(mmm);




        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ListeDesProfil.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
