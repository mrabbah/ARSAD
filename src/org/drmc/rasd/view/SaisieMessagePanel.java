/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.drmc.rasd.view;

import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import it.sauronsoftware.ftp4j.FTPDataTransferListener;
import java.sql.SQLException;

import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import org.drmc.rasd.dao.DbConnection;
import org.drmc.rasd.dao.IDbConnection;
import org.drmc.rasd.dao.IMessageEnvoyeDao;
import org.drmc.rasd.dao.IModelMessageDao;
import org.drmc.rasd.dao.MessageEnvoyeDao;
import org.drmc.rasd.dao.ModelMessageDao;
import org.drmc.rasd.modele.MessageEnvoye;
import org.drmc.rasd.modele.ModelMessage;
import org.drmc.rasd.modele.ParametresApplication;
import org.drmc.rasd.service.ChargeurParametresApplication;
import org.drmc.rasd.service.IChargeurParametresApplication;
import org.drmc.rasd.service.communication.FtpManager;
import org.drmc.rasd.service.fichiers.IGestionFichiers;
import org.drmc.rasd.service.message.IGestionMessage;
import org.drmc.rasd.service.mockup.ChargeurParametresApplicationMockup;

/**
 *
 * @author RABBAH
 */
public class SaisieMessagePanel extends javax.swing.JPanel {

    private final MainFrame parent;

    /**
     * Creates new form SaisieMessagePanel
     *
     * @param parent
     */
    public SaisieMessagePanel(MainFrame parent) {
        this.parent = parent;
        this.parent.setTitle("Saisie de message");
        Date date;
        initComponents();
        parent.getMenuPrincipal().setVisible(true);
        parent.getToolBarPrincipale().setVisible(true);
        myinit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        message = new javax.swing.JTextArea();
        envoyer = new javax.swing.JToggleButton();
        messageErreur = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        modeles = new javax.swing.JComboBox();

        setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Entrez votre message :");

        message.setColumns(20);
        message.setRows(5);
        jScrollPane1.setViewportView(message);

        envoyer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        envoyer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/drmc/rasd/images/icons/STOCK_REDO.png"))); // NOI18N
        envoyer.setText("Envoyer");
        envoyer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                envoyerActionPerformed(evt);
            }
        });

        messageErreur.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        messageErreur.setForeground(new java.awt.Color(255, 0, 0));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Choisir un modèle :");

        modeles.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        modeles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(envoyer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(messageErreur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 763, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 17, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(modeles, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(118, 118, 118)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(modeles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(envoyer, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(messageErreur, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void modelesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelesActionPerformed
        ModelMessage modeleMessageSelectionne = (ModelMessage) this.modeles.getSelectedItem();
        //System.out.println(this.modeles.getSelectedItem().toString());
        //this.message.setText(modeleMessageSelectionne.getCorpsModel());
        IChargeurParametresApplication ca = new ChargeurParametresApplication();
            final ParametresApplication pa = ca.chargerParametres();
            IDbConnection dbConnection = null;
        try {
            dbConnection = DbConnection.getInstance(pa);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SaisieMessagePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SaisieMessagePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        String corpsmodel=modeleMessageSelectionne.getCorpsModel();
        
        IMessageEnvoyeDao imed=new MessageEnvoyeDao(dbConnection);
        this.message.setText(imed.getcorpsMessageSlectionne(corpsmodel));
        System.out.println(imed.getcorpsMessageSlectionne(corpsmodel));
    }//GEN-LAST:event_modelesActionPerformed

    private void envoyerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_envoyerActionPerformed
        
       
        String messageAEnvoyer = message.getText();
        if (parent.getGestionMessage().messageEstValide(messageAEnvoyer)) {
            String url = parent.getParametresApplication().getUrlFtp();
            String login = parent.getParametresApplication().getLoginFtp();
            String password = parent.getParametresApplication().getPasswordFtp();
            String prefixNomFichier = parent.getParametresApplication().getPrefixFichierEnvoye();
            String suffixNomFichier = parent.getParametresApplication().getSuffixFichierEnvoyer();
            int csn = parent.getCsn();
            SurveillancePanel sp = new SurveillancePanel(parent, messageAEnvoyer, parent.getCf());
            IMessageEnvoyeDao messageEnvoyeDao = parent.getMessageEnvoyeDao();
            IGestionMessage gestionMessage = parent.getGestionMessage();
            IGestionFichiers gestionFichier = parent.getGestionFichiers();
            FtpManager fm = new FtpManager(messageAEnvoyer, url, login,
                    password, prefixNomFichier, suffixNomFichier, csn, sp, messageEnvoyeDao, gestionMessage, gestionFichier, null, null);
            fm.start();
            parent.setContentPane(sp);
            parent.pack();
            parent.setLocationRelativeTo(null); //On centre la fenêtre sur l'écran
        } else {
            messageErreur.setText("Non respect du format du message");
        }
                           
    }//GEN-LAST:event_envoyerActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton envoyer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea message;
    private javax.swing.JLabel messageErreur;
    private javax.swing.JComboBox modeles;
    // End of variables declaration//GEN-END:variables

    private void myinit() {
        try {
            IChargeurParametresApplication ca = new ChargeurParametresApplication();
            final ParametresApplication pa = ca.chargerParametres();
            //final IGestionMessage gestionMessage = new GestionMessage();
            
            IDbConnection dbConnection = DbConnection.getInstance(pa);
            IModelMessageDao immd=new ModelMessageDao(dbConnection);
            List<ModelMessage> liste = immd.listeModelsMessages();
          
            //liste.add(new ModelMessage(2, "SAMC40", "METAR"));
            //liste.add(new ModelMessage(1, "SIMC40", "SYNOP PRINCIPAL"));
            
            DefaultComboBoxModel dcb = new DefaultComboBoxModel(liste.toArray());
            
            this.modeles.setModel(dcb);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SaisieMessagePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SaisieMessagePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

   
       
    
}
